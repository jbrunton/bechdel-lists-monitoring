version: "3.8"

services:

  # reverse-proxy:
  #   # The official v2 Traefik docker image
  #   image: traefik:v2.2
  #   # Enables the web UI and tells Traefik to listen to docker
  #   command: --api.insecure=true --providers.docker
  #   ports:
  #     # The HTTP port
  #     - "80:80"
  #     # The Web UI (enabled by --api.insecure=true)
  #     - "8080:8080"
  #   volumes:
  #     # So that Traefik can listen to the Docker events
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - traefik-public

  # whoami:
  #   # A container that exposes an API to show its IP address
  #   image: containous/whoami
  #   labels:
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
  #   networks:
  #     - traefik-public

  prometheus:
    volumes:
      - ./prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.monitoring-prometheus.rule=Host(`prometheus.${DOMAIN?}`)


  # grafana:
  #   environment:
  #     - HOST_NAME=localhost

  node-exporter:
    volumes:
      - ./node-exporter/dev-hostname:/etc/nodename

  # alertmanager:
  #   volumes:
  #     - ./alertmanager/config.yml:/etc/alertmanager/config.yml

  # nginx:
  #   volumes:
  #     #- $NGINX_CERTS_DIR:/etc/nginx/certs:ro
  #     #- $NGINX_AUTH_DIR/.htpasswd:/etc/nginx/.htpasswd:ro
  #     - ./nginx/upstreams.conf:/etc/nginx/upstreams.conf:ro
  #     - ./nginx/services.conf:/etc/nginx/services.conf:ro
  #     - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf:ro

