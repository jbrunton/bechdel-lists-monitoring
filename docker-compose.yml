version: "3.8"

services:
  prometheus:
    image: prom/prometheus:v2.18.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - prometheus:/prometheus
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus-rules
        target: /etc/prometheus/rules.yml
      - source: prometheus-alerts
        target: /etc/prometheus/alerts.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.monitoring-prometheus-http.rule=Host(`prometheus.${HOST?}`)
        - traefik.http.routers.monitoring-prometheus-http.entrypoints=http
        - traefik.http.routers.monitoring-prometheus-http.middlewares=https-redirect
        - traefik.http.routers.monitoring-prometheus-https.rule=Host(`prometheus.${HOST?}`)
        - traefik.http.routers.monitoring-prometheus-https.entrypoints=https
        - traefik.http.routers.monitoring-prometheus-https.tls=true
        - traefik.http.routers.monitoring-prometheus-https.tls.certresolver=le
        - traefik.http.services.monitoring-prometheus.loadbalancer.server.port=9090
        - traefik.http.middlewares.monitoring-prometheus-auth.basicauth.usersfile=/run/secrets/htpasswd
        - traefik.http.routers.monitoring-prometheus-https.middlewares=monitoring-prometheus-auth
    networks:
      - net
      - traefik-public
  
  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.36.0
    container_name: cadvisor
    command: -logtostderr -docker_only
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
    networks:
      - net

  node-exporter:
    image: jbrunton/bechdel-lists-monitoring-node-exporter
    build:
      context: ./node-exporter
    hostname: "myapp.{{.Task.Slot}}"
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/home/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global

  grafana:
    image: jbrunton/bechdel-lists-monitoring-grafana
    container_name: grafana
    depends_on:
      - prometheus
    networks:
      - traefik-public
    volumes:
      - grafana:/var/lib/grafana
    environment:
      - HOST
    build:
      context: ./grafana
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.monitoring-grafana-http.rule=Host(`grafana.${HOST?}`)
        - traefik.http.routers.monitoring-grafana-http.entrypoints=http
        - traefik.http.routers.monitoring-grafana-http.middlewares=https-redirect
        - traefik.http.routers.monitoring-grafana-https.rule=Host(`grafana.${HOST?}`)
        - traefik.http.routers.monitoring-grafana-https.entrypoints=https
        - traefik.http.routers.monitoring-grafana-https.tls=true
        - traefik.http.routers.monitoring-grafana-https.tls.certresolver=le
        - traefik.http.services.monitoring-grafana.loadbalancer.server.port=3000
  
  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    networks:
      - traefik-public
      - net
    volumes:
      - alertmanager:/alertmanager
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --storage.path=/alertmanager
    restart: unless-stopped
    configs:
      - source: alertmanager-config
        target: /etc/alertmanager/config.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.monitoring-alertmanager-http.rule=Host(`alertmanager.${HOST?}`)
        - traefik.http.routers.monitoring-alertmanager-http.entrypoints=http
        - traefik.http.routers.monitoring-alertmanager-http.middlewares=https-redirect
        - traefik.http.routers.monitoring-alertmanager-https.rule=Host(`alertmanager.${HOST?}`)
        - traefik.http.routers.monitoring-alertmanager-https.entrypoints=https
        - traefik.http.routers.monitoring-alertmanager-https.tls=true
        - traefik.http.routers.monitoring-alertmanager-https.tls.certresolver=le
        - traefik.http.services.monitoring-alertmanager.loadbalancer.server.port=9093
        - traefik.http.middlewares.monitoring-alertmanager-auth.basicauth.usersfile=/run/secrets/htpasswd
        - traefik.http.routers.monitoring-alertmanager-https.middlewares=monitoring-alertmanager-auth

volumes:
  prometheus: {}
  alertmanager: {}
  grafana: {}

configs:
  prometheus-config:
    file: ./prometheus/prometheus.prod.yml
    name: prometheus-config-${TIMESTAMP}
  prometheus-rules:
    file: ./prometheus/rules.yml
    name: prometheus-rules-${TIMESTAMP}
  prometheus-alerts:
    file: ./prometheus/alerts.yml
    name: prometheus-alerts-${TIMESTAMP}  
  alertmanager-config:
    file: ./alertmanager/config.yml
    name: alertmanager-config-${TIMESTAMP}
  
networks:
  net:
    driver: overlay
  traefik-public:
    external: true